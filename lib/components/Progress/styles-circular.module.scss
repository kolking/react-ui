@use '../../styles/utils' as *;

// ---------------------------
// BASE STYLE
// ---------------------------

.container {  
  --value: 0;
  --margin: 0;
  --size: 3.125em;
  --linecap: unset;
  --thickness: calc(var(--size) / 10);
  --radius: calc(50% - var(--thickness) / 2);
  --circumference: calc(2 * 3.1415926 * var(--radius));
  --offset: calc(var(--circumference) * (100 - var(--value)) / 100);
  --color: var(--color-accent-500);
  --track-color: color-mix(in srgb, var(--color) 20%, transparent);
  --font-size: calc(var(--size) / 4);

  line-height: 0;
  user-select: none;
  width: var(--size);
  height: var(--size);
  margin: var(--margin);
  display: inline-block;
  vertical-align: text-bottom;

  &:has(.inner) {
    position: relative;
  }

  &[data-countdown=true] .range {
    transform: rotate(90deg) scaleX(-1);
  }

  &[data-progress-value=indeterminate] {
    .progress {
      will-change: transform;
      animation: rotate 2.5s linear infinite;
    }

    .range {
      transform: rotate(-90deg); // To override data-countdown=true
      animation: spin 2.0s linear infinite;
    }
  }
}

.progress {
  width: inherit;
  height: inherit;
  overflow: visible;
  vertical-align: top;
}

.track,
.range {
  r: var(--radius);
  cx: calc(var(--size) / 2);
  cy: calc(var(--size) / 2);
  stroke-width: var(--thickness);
}

.track {
  stroke: var(--track-color);
}

.range {
  stroke: var(--color);
  stroke-linecap: var(--linecap);
  stroke-dashoffset: var(--offset);
  stroke-dasharray: var(--circumference);
  transform: rotate(-90deg);
  transform-origin: center center;
}

.inner {
  @extend %absolute-fill, %flex-centered;
  font-size: var(--font-size);
  line-height: var(--line-height-xs);
  font-weight: var(--font-weight-medium);

  [data-button] {
    font-size: inherit;
  }
}

// ---------------------------
// ANIMATION
// ---------------------------

@keyframes rotate {
  0%   { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes spin {
  0% {
    stroke-dasharray: 0, var(--circumference);
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: var(--circumference), var(--circumference);
    stroke-dashoffset: calc(var(--circumference) / -2);
  }
  100% {
    stroke-dasharray: var(--circumference), var(--circumference);
    stroke-dashoffset: calc(var(--circumference) / -1);
  }
}
